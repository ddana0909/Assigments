@model PagedList.IPagedList<MusicStore.Models.Order>

@functions {private string GetGlyph(out dynamic sortOrder, string field)
	{
		sortOrder = ViewBag.DisplayOption.SortField == field ? ViewBag.DisplayOption.SortOrder : "asc";
		var glyphClass = string.Empty;

		if (ViewBag.DisplayOption.SortField == field)
		{
			glyphClass = sortOrder == "desc"
				? "glyphicon glyphicon-sort-by-attributes"
				: "glyphicon glyphicon-sort-by-attributes-alt";
		}
		return glyphClass;
	}
}
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
	ViewBag.Title = "Orders";
    
}

<h2>Orders</h2>

@using (Html.BeginForm("Index", "Home", FormMethod.Get, new { @class = "form-horizontal", @role = "form" }))
{
	<div class="form-group">
		<div class="col-md-4 ">
			@Html.TextBox("NameToSearch", ViewBag.DisplayOption.NameToSearch as string, new { @class = "form-control" })
		</div>
		<button type="submit" class="btn btn-default col-md-1">Search</button>

		<div class="col-md-offset-4 col-md-2 control-label"><span class="pull-right">Orders on Page:</span></div>
		<div class="col-md-1">
			@Html.DropDownList("PageSize", new SelectList(ViewBag.DisplayOption.SizeList), new { @class = "form-control", onchange = "$(this.form).submit();" })
		</div>

		@Html.Hidden("SortOrder", (string)ViewBag.DisplayOption.SortOrder)
		@Html.Hidden("SortField", (string)ViewBag.DisplayOption.SortField)
	</div>


	<table class="table table-bordered table-striped ">
		<tr>

			<th>First Name
			</th>
			<th>Last Name
			</th>
			<th>Address
			</th>
			<th>City
			</th>
			<th>State
			</th>
			<th>Postal Code
			</th>
			<th>Country
			</th>
			<th>Phone
			</th>
			<th>
				@{
	//var dateSortOrder = ViewBag.DisplayOption.SortField == "Date" ? ViewBag.DisplayOption.SortOrder : "asc";
	//var dateClass = string.Empty;

	//if (ViewBag.DisplayOption.SortField == "Date")
	//{
	//	dateClass = dateSortOrder == "desc" ? "glyphicon glyphicon-sort-by-attributes" : "glyphicon glyphicon-sort-by-attributes-alt";
	//}

	dynamic dateSortOrder;
	var dateClass = GetGlyph(out dateSortOrder, "Date");

	dynamic totalSortOrder;
	var totalClass = GetGlyph(out totalSortOrder, "Total");		
	
				}
				<a onclick="SubmitDisplayOptions('Date','@dateSortOrder')">Date</a>
				<span class="@dateClass"></span>
			</th>
			<th>

				<a onclick="SubmitDisplayOptions('Total','@totalSortOrder')">Total</a>
				<span class="@totalClass"></span>
			</th>
			<th></th>
		</tr>

		@foreach (var item in Model)
  {
			<tr>

				<td>
					@Html.DisplayFor(modelItem => item.FirstName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.LastName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Address)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.City)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.State)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PostalCode)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Country)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Phone)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.OrderDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Total)
				</td>
				<td>
					<a onclick="ShowOrderAlbums('@Url.Action("OrderAlbums", new { orderID = item.OrderId })')">Albums</a>
				</td>
			</tr>
  }

	</table>
	<br />

	<div class="col-md-offset-9 col-md-3">
		<span class="pull-right">
		
	Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
	of
		@Model.PageCount
	@Html.PagedListPager(Model, page => Url.Action("Index",
			new
			{
				ViewBag.DisplayOption.SortField,
				ViewBag.DisplayOption.NameToSearch,
				ViewBag.DisplayOption.SortOrder,
				ViewBag.DisplayOption.PageSize, page
			}))
	
		</span>
	</div>
}


<div class="container col-md-8" id="albums">
</div>


