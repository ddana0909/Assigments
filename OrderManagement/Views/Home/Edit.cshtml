@model OrderManagement.Order

@{
    ViewBag.Title = "Edit Order";
}
<head>
   <link href="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.2.2/css/bootstrap-combined.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" media="screen"
          href="http://tarruda.github.com/bootstrap-datetimepicker/assets/css/bootstrap-datetimepicker.min.css" />
</head>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.OrderID)
    <div class="row">
        <div class=" col-md-offset-1 col-md-4">
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.CustomerID, "Customer")
                @Html.DropDownList("CustomerID", (SelectList)ViewBag.CustomerID, String.Empty, new { @class = "form-control input-sm" })
            </div>
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.EmployeeID, "Employee")

                @Html.DropDownList("EmployeeID", (SelectList)ViewBag.EmployeeID, String.Empty, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.EmployeeID)
            </div>
            <div class="form-group input-group-sm">

                @Html.LabelFor(model => model.OrderDate)

                <div id="datetimepicker">
                  @Html.TextBoxFor(model => model.OrderDate, new { @class = "form-control input-sm input-append add-on" })
                </div>
                 
              
                 @Html.ValidationMessageFor(model => model.OrderDate)
            </div>
            <div class="form-group input-group-sm">

                @Html.LabelFor(model => model.RequiredDate)
               
                    @Html.TextBoxFor(model => model.RequiredDate, new { @class = "form-control input-sm" })
             
                @Html.ValidationMessageFor(model => model.RequiredDate)
            </div>
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.ShippedDate)
               
                @Html.TextBoxFor(model => model.ShippedDate, new { @class = "form-control input-sm " })
                 
                @Html.ValidationMessageFor(model => model.ShippedDate)
            </div>
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.ShipVia, "Shipper")

                @Html.DropDownList("ShipVia", (SelectList)ViewBag.ShipVia, String.Empty, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ShipVia)
            </div>
            <div class="form-group input-group-sm">

                @Html.LabelFor(model => model.Freight)

                @Html.TextBoxFor(model => model.Freight, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.Freight)
            </div>
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.ShipName)

                @Html.TextBoxFor(model => model.ShipName, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ShipName)
            </div>
        </div>
        <div class="col-md-offset-1 col-md-4">
            <div class="form-group input-group-sm">

                @Html.LabelFor(model => model.ShipAddress)

                @Html.TextBoxFor(model => model.ShipAddress, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ShipAddress)
            </div>
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.ShipCity)

                @Html.TextBoxFor(model => model.ShipCity, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ShipCity)
            </div>
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.ShipRegion)

                @Html.TextBoxFor(model => model.ShipRegion, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ShipRegion)
            </div>
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.ShipPostalCode)

                @Html.TextBoxFor(model => model.ShipPostalCode, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ShipPostalCode)
            </div>
            <div class="form-group input-group-sm">
                @Html.LabelFor(model => model.ShipCountry)

                @Html.TextBoxFor(model => model.ShipCountry, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.ShipCountry)
            </div>
            <p>
                <input class="btn btn-default"type="submit" value="Save" />
            </p>
        </div>
    </div>   

}

<div class="col-md-offset-1">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript"
        src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js">
    </script>
    <script type="text/javascript"
        src="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.2.2/js/bootstrap.min.js">
    </script>
    <script type="text/javascript"
        src="http://tarruda.github.com/bootstrap-datetimepicker/assets/js/bootstrap-datetimepicker.min.js">
    </script>
    <script type="text/javascript"
        src="http://tarruda.github.com/bootstrap-datetimepicker/assets/js/bootstrap-datetimepicker.pt-BR.js">
    </script>
    <script type="text/javascript">
        $('#datetimepicker').datetimepicker({
            language: 'en',
            format: 'MM/dd/yyyy hh:mm:ss',
            pickTime: false
        });
        
    </script>
}
